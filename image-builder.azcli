# README
# This file contains all the Shell commands listed in this official doc
# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/image-builder
#
# Using the Azure CLI Tools VS Code Extension, you can easily run each line
# See VS Tools Repo for details
# https://marketplace.visualstudio.com/items?itemName=ms-vscode.azurecli
# https://github.com/Microsoft/vscode-azurecli

# ---------------------------------
# Part 0 - Check if Feature Enabled
# ---------------------------------

az provider show -n Microsoft.VirtualMachineImages -o json | grep registrationState
az provider show -n Microsoft.KeyVault -o json | grep registrationState
az provider show -n Microsoft.Compute -o json | grep registrationState
az provider show -n Microsoft.Storage -o json | grep registrationState
az provider show -n Microsoft.Network -o json | grep registrationState

# Run if previous commands say "not registered"
az provider register -n Microsoft.VirtualMachineImages
az provider register -n Microsoft.Compute
az provider register -n Microsoft.KeyVault
az provider register -n Microsoft.Storage
az provider register -n Microsoft.Network

# ----------------------------------
# Part 1 - Variables and Permissions
# ----------------------------------

# Resource group name - we are using ibLinuxGalleryRG in this example
sigResourceGroup=ibLinuxGalleryRG

# Datacenter location - we are using West US 2 in this example
location=westus2

# Additional region to replicate the image to - we are using East US in this example
additionalregion=eastus

# name of the shared image gallery - in this example we are using myGallery
sigName=myIbGallery

# name of the image definition to be created - in this example we are using myImageDef
imageDefName=myIbImageDef

# image distribution metadata reference name
runOutputName=aibLinuxSIG

subscriptionID=<Subscription ID>

# Create Resource Group
az group create -n $sigResourceGroup -l $location

# ------------------------------------------------------
# Part 2 - Create Managed Identiy and Assign Permissions
# ------------------------------------------------------

# create user assigned identity for image builder to access the storage account where the script is located
identityName=aibBuiUserId$(date +'%s')
az identity create -g $sigResourceGroup -n $identityName

# get identity id
imgBuilderCliId=$(az identity show -g $sigResourceGroup -n $identityName -o json | grep "clientId" | cut -c16- | tr -d '",')

# get the user identity URI, needed for the template
imgBuilderId=/subscriptions/$subscriptionID/resourcegroups/$sigResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/$identityName

# this command will download an Azure role definition template, and update the template with the parameters specified earlier.
curl https://raw.githubusercontent.com/Azure/azvmimagebuilder/master/solutions/12_Creating_AIB_Security_Roles/aibRoleImageCreation.json -o aibRoleImageCreation.json

imageRoleDefName="Azure Image Builder Image Def"$(date +'%s')

# update the definition
sed -i -e "s/<subscriptionID>/$subscriptionID/g" aibRoleImageCreation.json
sed -i -e "s/<rgName>/$sigResourceGroup/g" aibRoleImageCreation.json
sed -i -e "s/Azure Image Builder Service Image Creation Role/$imageRoleDefName/g" aibRoleImageCreation.json

# create role definitions
az role definition create --role-definition ./aibRoleImageCreation.json

# grant role definition to the user assigned identity
az role assignment create \
    --assignee $imgBuilderCliId \
    --role "$imageRoleDefName" \
    --scope /subscriptions/$subscriptionID/resourceGroups/$sigResourceGroup

# ------------------------------------
# Part 3 - Create Shared Image Gallery
# ------------------------------------

az sig create \
    -g $sigResourceGroup \
    --gallery-name $sigName


az sig image-definition create \
   -g $sigResourceGroup \
   --gallery-name $sigName \
   --gallery-image-definition $imageDefName \
   --publisher myIbPublisher \
   --offer myOffer \
   --sku 18.04-LTS \
   --os-type Linux


# ------------------------------------
# Part 4 - Download and Configure JSON
# ------------------------------------
# Julie comment: for what??

curl https://raw.githubusercontent.com/Azure/azvmimagebuilder/master/quickquickstarts/1_Creating_a_Custom_Linux_Shared_Image_Gallery_Image/helloImageTemplateforSIG.json -o helloImageTemplateforSIG.json
sed -i -e "s/<subscriptionID>/$subscriptionID/g" helloImageTemplateforSIG.json
sed -i -e "s/<rgName>/$sigResourceGroup/g" helloImageTemplateforSIG.json
sed -i -e "s/<imageDefName>/$imageDefName/g" helloImageTemplateforSIG.json
sed -i -e "s/<sharedImageGalName>/$sigName/g" helloImageTemplateforSIG.json
sed -i -e "s/<region1>/$location/g" helloImageTemplateforSIG.json
sed -i -e "s/<region2>/$additionalregion/g" helloImageTemplateforSIG.json
sed -i -e "s/<runOutputName>/$runOutputName/g" helloImageTemplateforSIG.json
sed -i -e "s%<imgBuilderId>%$imgBuilderId%g" helloImageTemplateforSIG.json


# -----------------------------
# Part 5 - Create Image Version
# -----------------------------

az resource create \
    --resource-group $sigResourceGroup \
    --properties @helloImageTemplateforSIG.json \
    --is-full-object \
    --resource-type Microsoft.VirtualMachineImages/imageTemplates \
    -n helloImageTemplateforSIG01


# --------------------------
# Part 6 - Start Image Build
# --------------------------

az resource invoke-action \
     --resource-group $sigResourceGroup \
     --resource-type  Microsoft.VirtualMachineImages/imageTemplates \
     -n helloImageTemplateforSIG01 \
     --action Run


# ---------------------
# Part 7 - Creat the VM
# ---------------------

az vm create \
  --resource-group $sigResourceGroup \
  --name myAibGalleryVM \
  --admin-username aibuser \
  --location $location \
  --image "/subscriptions/$subscriptionID/resourceGroups/$sigResourceGroup/providers/Microsoft.Compute/galleries/$sigName/images/$imageDefName/versions/latest" \
  --generate-ssh-keys


# ------------
# Part 8 - SSH
# ------------
# If you've made it this far, SSH into your VM and confirm it worked

ssh aibuser@<publicIpAddress>